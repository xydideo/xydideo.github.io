{"title":"git的日常使用","date":"2020-07-08T12:51:11.000Z","date_formatted":{"ll":"Jul 8, 2020","L":"07/08/2020","MM-DD":"07-08"},"link":"2020/07/08/git","tags":["git"],"categories":["开发"],"updated":"2020-07-09T09:29:12.204Z","content":"<br><h2 id=\"git-常用命令\">git 常用命令<a href=\"#git-常用命令\" title=\"git 常用命令\"></a></h2><div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th>git命令</th><th>名称</th></tr>\n</thead><tbody><tr>\n<td>git status</td><td>查看状态</td></tr>\n<tr>\n<td>git add .</td><td>添加所有</td></tr>\n<tr>\n<td>git commit -m “xxx” 引号内xxx是提交备注</td><td>添加所有</td></tr>\n<tr>\n<td>git push</td><td>提交</td></tr>\n<tr>\n<td>git branch</td><td>查看本地分支</td></tr>\n<tr>\n<td>git branch -r</td><td>查看远程分支</td></tr>\n<tr>\n<td>git branch -d feature/lwn</td><td>删除本地分支</td></tr>\n<tr>\n<td>git push origin –delete feature/lwn</td><td>删除远程分支</td></tr>\n<tr>\n<td>git co -b feature/lwn</td><td>创建本地分支并切换</td></tr>\n<tr>\n<td>git checkout .</td><td>撤销所有未add文件</td></tr>\n<tr>\n<td>git reset –hard</td><td>撤销所有已add文件</td></tr>\n<tr>\n<td>git reset –hard origin/develop</td><td>强制使用远程develop覆盖</td></tr>\n<tr>\n<td>git tag -l -n</td><td>查看标签列表与信息</td></tr>\n</tbody></table></div></div><br><h2 id=\"git-commit-备注\">git commit 备注<a href=\"#git-commit-备注\" title=\"git commit 备注\"></a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feat：新功能</span><br><span class=\"line\">fix：修复 bug</span><br><span class=\"line\">docs：撰写文档</span><br><span class=\"line\">style：代码格式（不影响代码运行的变动）</span><br><span class=\"line\">refactor：重构（既不是新增功能，也不是修改 bug 的代码变动）</span><br><span class=\"line\">test：增加测试</span><br><span class=\"line\">build：工程化</span><br><span class=\"line\">example：示例（仅用于修改 example&#x2F;）</span><br><span class=\"line\">chore：代码优化或辅助工具的变动 commit 信息应符合如下规则，建议使用工具 comitzen(git cz) 代替 git commit</span><br></pre></td></tr></table></figure><br><h2 id=\"git-别名\">git 别名<a href=\"#git-别名\" title=\"git 别名\"></a></h2><ul><li>复制<code>vim ~/.gitconfig</code>到命令行后回车，输入 i 进入insert模式</li></ul><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[user]</span><br><span class=\"line\">\tname &#x3D; Your Name &#x2F;&#x2F; git 账号</span><br><span class=\"line\">\temail &#x3D; you@yourdomain.example.com &#x2F;&#x2F; git 邮箱</span><br><span class=\"line\">[core]</span><br><span class=\"line\">\teditor &#x3D; vim</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#x2F;&#x2F; 别名设置如下</span><br><span class=\"line\">[alias]</span><br><span class=\"line\">\tad &#x3D; add .</span><br><span class=\"line\">\tco &#x3D; checkout</span><br><span class=\"line\">\tst &#x3D; status </span><br><span class=\"line\">\tcm &#x3D; commit -m</span><br><span class=\"line\">\tbr &#x3D; branch </span><br><span class=\"line\">\tpld &#x3D; pull origin develop</span><br><span class=\"line\">\tplm &#x3D; pull origin master</span><br><span class=\"line\">\tpl &#x3D; pull</span><br><span class=\"line\">\tps &#x3D; push</span><br><span class=\"line\">\tcof &#x3D; checkout feature&#x2F;lwn</span><br><span class=\"line\">\tcod &#x3D; checkout develop</span><br><span class=\"line\">\tred &#x3D; rebase develop </span><br><span class=\"line\">\tref &#x3D; rebase feature&#x2F;lwn</span><br></pre></td></tr></table></figure><ul><li>添加完之后按 <code>esc</code> 退出vim编辑模式再 按 <code>:wq</code> 表退出并保存</li><li>使用 <code>git pld</code> 就相当于输入了 <code>git pull origin develop</code>，简直太方面</li></ul><br><h2 id=\"git提交代码-日常流程\">git提交代码-日常流程<a href=\"#git提交代码-日常流程\" title=\"git提交代码-日常流程\"></a></h2><p>本地开发分支：<code>feature/lwn</code>，本地稳定分支 <code>develop</code>，提交分支<code>origin develop</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当前分支：feature&#x2F;lwn</span><br><span class=\"line\">git ad &#x2F;&#x2F; 添加所有修改</span><br><span class=\"line\">git cm &quot;style: 修改全局loading样式&quot; &#x2F;&#x2F; 本地开发代码提交到本地仓库</span><br><span class=\"line\">git cod &#x2F;&#x2F; 切换到 develop 分支</span><br><span class=\"line\">git merge feature&#x2F;lwn  --no-ff -m &quot;style: 修改全局loading样式&quot; &#x2F;&#x2F; 本地开发分支合并到develop</span><br><span class=\"line\">git pld &#x2F;&#x2F; 拉取远程远程 develop 代码，如有冲突，此时解决冲突</span><br><span class=\"line\">\t解决冲突之后：</span><br><span class=\"line\">\tgit ad</span><br><span class=\"line\">\tgit cm &quot;fix: 解决冲突&quot;</span><br><span class=\"line\">git ps &#x2F;&#x2F; 将本地代码提交到远程</span><br><span class=\"line\">git cof &#x2F;&#x2F; 切换到本地开发分支，解决冲突之后，本地开发分支落后与本地develop</span><br><span class=\"line\">git red &#x2F;&#x2F; 以develop为基，保持开发分支也为最新</span><br></pre></td></tr></table></figure><br><h2 id=\"git-打标签\">git 打标签<a href=\"#git-打标签\" title=\"git 打标签\"></a></h2><ul><li>查看标签列表与信息： <code>git tag -l -n</code></li><li>添加本地标签： <code>git tag -a v1.0.0.200520_R -m &quot;1. xxx&quot;</code><ul><li>v1.0.0 为当前版本号</li><li>.2200520 为当前 年月日 日期</li><li>_R 为正式版本，（ _alpha：为临时发布，主要修复bug ）（ _beta：为临时发布，主要ui修改 ）</li><li>-m “xxx” 为当前版本的说明</li></ul></li><li>上传标签到远程：<code>git push origin --tags</code></li><li>删除本地标签：<code>git tag -D &lt;tagname&gt;</code></li><li>删除远程标签：<code>git push origin :refs/tags/&lt;tagname&gt;</code></li></ul><hr>\n<p>完整流程：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -a v1.0.0.200520_R -m &quot;style: 解决弹框间距样式, fix: 新增全局loading功能&quot;</span><br><span class=\"line\">git push origin --tags</span><br></pre></td></tr></table></figure><br><h2 id=\"解决git提交对文件大小写不明感问题\">解决git提交对文件大小写不明感问题<a href=\"#解决git提交对文件大小写不明感问题\" title=\"解决git提交对文件大小写不明感问题\"></a></h2><ul><li>问题描述：本地文件由原来的驼峰命名改成小写提交，git远程没更新</li><li>解决思路（删除远程文件再重新上传）：<ul><li>备份远程git项目（确保以防万一），浏览器登录git创建新分支，选择分支来源即可</li><li>关闭git忽略大小写 <code>git config core.ignorecase false</code></li><li>项目完成全部文件重命名，保持本地最新，例如：修改了 |–src 下了全部文件命名</li><li>将src文件夹移动到项目之外，这时候提交到远程，即删除了远程src文件<ul><li>git ad -&gt; git cm “chore: 删除文件命名” -&gt; git ps</li></ul></li><li>将src文件放回项目，再次提交<ul><li>git ad -&gt; git cm “chore: 新增文件命名” -&gt; git ps</li></ul></li><li>完成本地与远程文件重命名</li></ul></li><li>完成之后，本地分支可能会切换不了，我出现了可能<ul><li>删除本地其他分支 <code>git branch -D feature/lwn</code></li><li>重新创建本地分支 <code>git checkout -b feature/lwn</code></li></ul></li></ul><center>结束...</center>","next":{"title":"vscode","link":"2020/07/02/vscode"},"plink":"http://yoursite.com/2020/07/08/git/","toc":[{"id":"git-常用命令","title":"git 常用命令","index":"1"},{"id":"git-commit-备注","title":"git commit 备注","index":"2"},{"id":"git-别名","title":"git 别名","index":"3"},{"id":"git提交代码-日常流程","title":"git提交代码-日常流程","index":"4"},{"id":"git-打标签","title":"git 打标签","index":"5"},{"id":"解决git提交对文件大小写不明感问题","title":"解决git提交对文件大小写不明感问题","index":"6"}]}